services:
  app:
    image: todo-front-dev
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-frontend/:/usr/src/app
    # no ports exposed, Nginx will serve it
    environment:
      - VITE_BACKEND_URL=/api

  server:
    image: todo-back-dev
    build:
      context: ./todo-backend
      dockerfile: Dockerfile
    volumes:
      - ./todo-backend/:/usr/src/app
    # no ports exposed, Nginx will proxy to it
    environment:
      - MONGO_URL=mongodb://root:example@mongo:27017/the_database?authSource=admin
      - REDIS_URL=redis://redis:6379

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo-data:/data/db

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./redis_data:/data

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    container_name: reverse-proxy
    depends_on:
      - app
      - server
# services:
#   app:
#     image: todo-front-dev
#     build:
#       context: ./todo-frontend # Use current directory as build context
#       dockerfile: dev.Dockerfile
#   nginx:
#     image: nginx:1.20.1
#     volumes:
#       - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
#     ports:
#       - 8080:80
#     container_name: reverse-proxy
#     depends_on:
#       - frontend
#       - backend # wait for the frontend container to be started

#   frontend:
#     image: todo-frontend-dev
#     build:
#       context: ./todo-frontend
#       dockerfile: ./dev.Dockerfile
#     volumes:
#       - ./todo-frontend:/usr/src/app
#       - /usr/src/app/node_modules
#     ports:
#       - 3000:3000

#   backend:
#     image: todo-backend-dev
#     build:
#       context: ./todo-backend
#       dockerfile: ./dev.Dockerfile
#     volumes:
#       - ./todo-backend:/usr/src/app
#       - /usr/src/app/node_modules
#     ports:
#       - 3001:3001
#     environment:
#       MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
#       REDIS_URL: redis://redis:6379

#   mongo:
#     image: mongo
#     ports:
#       - 3456:27017
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#       MONGO_INITDB_DATABASE: the_database
#     volumes:
#       - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
#       - ./todo-backend/mongo-data:/data/db

#   redis:
#     # set the working directory to /todo-backend
#     working_dir: /todo-backend
#     image: redis
#     ports:
#       - 6379:6379
#     command: ["redis-server", "--appendonly", "yes"] # Override command to enable AOF persistence
#     volumes:
#       - ./redis_data:/data
